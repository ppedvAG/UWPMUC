<Page
    x:Class="UWPMUC.Modul10.BlankPage5"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UWPMUC.Modul10"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:modul06="using:UWPMUC.Modul06"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <local:DateTimeConverter x:Key="conv1"></local:DateTimeConverter>
        <DataTemplate x:Key="ListViewItemTemplate1" x:DataType="modul06:ToDo">
            <SwipeControl x:Name="ListViewSwipeContainer">
                <SwipeControl.LeftItems>
                    <SwipeItems Mode="Reveal">
                        <SwipeItem Invoked="SwipeItem_Invoked" Text="Edit">
                            <SwipeItem.IconSource>
                                <SymbolIconSource Symbol="Edit"/>
                            </SwipeItem.IconSource>
                        </SwipeItem>
                    </SwipeItems>
                </SwipeControl.LeftItems>
                <SwipeControl.RightItems>
                    <SwipeItems Mode="Execute">
                        <SwipeItem Background="Red" BehaviorOnInvoked="Close" Invoked="SwipeItem_Invoked_1" Text="Delete">
                            <SwipeItem.IconSource>
                                <SymbolIconSource Symbol="ClosePane"/>
                            </SwipeItem.IconSource>
                        </SwipeItem>
                    </SwipeItems>
                </SwipeControl.RightItems>
                <Border CornerRadius="5" BorderBrush="Blue" Margin="5" BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="LightBlue"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <StackPanel>
                        <CheckBox Click="CheckBox_Click" IsChecked="{x:Bind Mode=TwoWay, Path=Done}" Tag="{x:Bind Path=Id}"/>
                        <TextBlock  Text="{x:Bind Mode=OneWay, Path=Aufgabe}"/>
                    </StackPanel>
                </Border>
            </SwipeControl>
        </DataTemplate>
        <Style x:Key="ListViewItemRevealStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
                                               PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                               PointerOverBackground="Yellow" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="Red"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemContainerStyle1" BasedOn="{StaticResource ListViewItemRevealStyle}" TargetType="ListViewItem"/>
        <ItemsPanelTemplate x:Key="ListViewItemsPanel1">
            <StackPanel Orientation="Vertical"/>
        </ItemsPanelTemplate>
    </Page.Resources>
    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.Content>
                <Grid/>
            </CommandBar.Content>
            <AppBarButton Icon="Add" Label="Add DoTO" Click="{x:Bind MyVM.SaveNeuTodo}" AllowFocusOnInteraction="True"/>
            <AppBarButton Icon="Refresh" Label="Laden" Click="{x:Bind MyVM.LoadTodo}"/>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1303*"/>
            <ColumnDefinition Width="617*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="10,10,0,0" Text="Neues ToDo" 
                   FontSize="24"
                   TextWrapping="Wrap" VerticalAlignment="Top"/>
        <TextBox Grid.Column="1" HorizontalAlignment="Left" Margin="10,117,0,0" 
                 Text="{x:Bind MyVM.NeuToDo.Aufgabe,Mode=TwoWay}" VerticalAlignment="Top" Height="44" Width="365"/>
        <DatePicker Grid.Column="1" HorizontalAlignment="Left" Margin="10,232,0,0" 
                    Header="Fertig bis"
                    Date="{x:Bind MyVM.NeuToDo.Termin,Mode=TwoWay,Converter={StaticResource conv1 }}"
                    VerticalAlignment="Top"/>
        <RefreshContainer RefreshRequested="RefreshContainer_RefreshRequested">
            <ListView ItemsPanel="{StaticResource ListViewItemsPanel1}" ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}" ItemTemplate="{StaticResource ListViewItemTemplate1}" HorizontalAlignment="Left" Height="992" Margin="65,42,0,0" VerticalAlignment="Top" Width="812" 
                  ItemsSource="{x:Bind MyVM.ToDoListe}">
            </ListView>
        </RefreshContainer>
    </Grid>

</Page>
